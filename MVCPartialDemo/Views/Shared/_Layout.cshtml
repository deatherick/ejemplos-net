<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @model MVCPartialDemo.Models.RequestStudentsModel
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        @{Html.RenderPartial("_MyView2");}
    </div>
    <div class="container body-content">
        @RenderBody()
        @using (Html.BeginForm("Students", "My", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "students_form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Oculto, new { value = "prueba valor oculto" })
        <input type="file" name="prueba"/>
            <div class="form-group">
                @Html.LabelFor(model => model.Cantidad, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Cantidad, new { @class = "form-control", type = "number", value = 1 })
                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Students" />
                </div>
            </div>
        }

        @using (Html.BeginForm("Schools", "My", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Schools" />
                </div>
            </div>
        }

        @using (Html.BeginForm("Error", "My", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Error" />
                </div>
            </div>
        }

        <div class="progress" style=" display: none;">
            <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-success active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" 
                 style="width: 0;">
                <span class="sr-only">0% Complete</span>
            </div>
        </div>

        <div id="contenedor"></div>
        <hr />
        @{Html.RenderPartial("_MyView");}
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    @RenderSection("scripts", required: false)
    <script type="text/javascript">
        $(function () {
            function updateProgress(percentage) {
                console.log(percentage + '%');
                if (percentage > 100) percentage = 100;

                if (percentage === 0) {
                    $('.progress').fadeOut();
                }
                else {
                    $('.progress').fadeIn();
                }

                if (percentage === 100) {
                    setTimeout(function() {
                            updateProgress(0);
                        },
                        5000);
                }

                $('#progressBar').css('width', percentage + '%');
                $('#progressBar').html(percentage + '%');
            }

            $('#students_form').validate();

            $('form').on('submit', function (e) {
                e.preventDefault();
                if ($(this).valid()) {
                    var formdata = new FormData(this);
                    $.ajax({
                        type: $(this).attr('method'),
                        url: $(this).attr('action'),
                        data: formdata,
                        processData: false,
                        contentType: false,
                        beforeSend: function (xhr) {
                            //Todo: Callback que se ejecuta previo al envío
                        },
                        success: function (result, status, jqXhr) {
                            $('#contenedor').html(result);
                        },
                        error: function (jqXhr, exception) {
                            $('#contenedor').html("<h2>Ha ocurrido un error: " + jqXhr.statusText + "</h2>");
                        },
                        complete: function (jqXhr, status) {
                            //Todo: Callback de completada la petición
                        },
                        xhr: function () {
                            var xhr = new window.XMLHttpRequest();
                            //Upload progress
                            xhr.upload.onprogress = function (e) {
                                updateProgress(Math.floor(e.loaded / e.total * 100));
                            };
                            //Download progress
                            xhr.progress = function (e) {
                                console.log(Math.floor(e.loaded / e.total * 100) + '%');
                            };

                            return xhr;
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>
